version: '2.1'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: chat
      POSTGRES_DB: chat
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=chat -d chat"]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    restart: always
    image: nginx:mainline
    ports:
      - "10080:80"
    volumes:
      - ./container/chat.local.conf:/etc/nginx/conf.d/default.conf
      - .:/chat
  migration:
    build: .
    command: bash -c "rm -f /shared/.migration.done; make migrate && touch /shared/.migration.done"
    environment:
      POSTGRES_PORT_5432_TCP_ADDR: postgres
    volumes:
      - .:/work
      - shared_volume:/shared
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:postgres
  runserver:
    restart: always
    build: .
    command: python ./manage.py runserver 0.0.0.0:8000
    entrypoint: /chat/container/entrypoint.sh
    environment:
      POSTGRES_PORT_5432_TCP_ADDR: postgres
    volumes:
      - .:/chat
      - shared_volume:/shared
    ports:
      - "18000:8000"
    links:
      - postgres:postgres
    depends_on:
      - migration
  ws_chat:
    restart: always
    build: .
    command: python ./manage.py ws_chat --host 0.0.0.0 --port 8889
    entrypoint: /chat/container/entrypoint.sh
    environment:
      POSTGRES_PORT_5432_TCP_ADDR: postgres
    volumes:
      - .:/chat
      - shared_volume:/shared
    ports:
      - "18889:8889"
    depends_on:
      - runserver
    links:
      - postgres:postgres
  client:
    image: "node:latest"
    command: "yarn install && yarn run release"
    working_dir: /chat/client
    volumes:
      - .:/chat

volumes:
  pgdata:
  shared_volume:
